// <auto-generated />
using System;
using EquipLease.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EquipLease.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250121141953_UpdateMigrations")]
    partial class UpdateMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquipLease.Core.Entities.EquipmentType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AreaPerUnit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("EquipmentTypes");

                    b.HasData(
                        new
                        {
                            Code = "ET001",
                            AreaPerUnit = 50,
                            Name = "Type A"
                        },
                        new
                        {
                            Code = "ET002",
                            AreaPerUnit = 100,
                            Name = "Type B"
                        });
                });

            modelBuilder.Entity("EquipLease.Core.Entities.PlacementContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EquipmentQuantity")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductionFacilityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeCode");

                    b.HasIndex("ProductionFacilityCode");

                    b.ToTable("PlacementContracts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86e28658-ee00-42c6-9d77-75a78bebc7a0"),
                            EquipmentQuantity = 10,
                            EquipmentTypeCode = "ET001",
                            ProductionFacilityCode = "PF001"
                        },
                        new
                        {
                            Id = new Guid("e68e6060-026c-4118-83c3-c92a28502c41"),
                            EquipmentQuantity = 5,
                            EquipmentTypeCode = "ET002",
                            ProductionFacilityCode = "PF002"
                        });
                });

            modelBuilder.Entity("EquipLease.Core.Entities.ProductionFacility", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardArea")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("ProductionFacilities");

                    b.HasData(
                        new
                        {
                            Code = "PF001",
                            Name = "Facility 1",
                            StandardArea = 500
                        },
                        new
                        {
                            Code = "PF002",
                            Name = "Facility 2",
                            StandardArea = 800
                        });
                });

            modelBuilder.Entity("EquipLease.Core.Entities.PlacementContract", b =>
                {
                    b.HasOne("EquipLease.Core.Entities.EquipmentType", "EquipmentType")
                        .WithMany()
                        .HasForeignKey("EquipmentTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EquipLease.Core.Entities.ProductionFacility", "ProductionFacility")
                        .WithMany()
                        .HasForeignKey("ProductionFacilityCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EquipmentType");

                    b.Navigation("ProductionFacility");
                });
#pragma warning restore 612, 618
        }
    }
}
